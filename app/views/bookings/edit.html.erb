<% array_of_weeks = weeks(@date) %>
<% start_date = @booking.start_date %>
<% end_date = @booking.end_date %>
<% booked_dates = find_bookings(@bookings) %> <!--returns a hash of booked dates and the associated user for each booked date.-->
<% proposed_dates = (start_date..end_date).to_a %>
<% booked_dates = remove_proposed(booked_dates, proposed_dates) %>
<% booked_dates_array = booked_array(booked_dates) %>
<% if session[:check] %>
	<% conflicting_dates = booked_dates_array & (@proposed.start_date..@proposed.end_date).to_a %>
	<% proposed_dates = (@proposed.start_date..@proposed.end_date).to_a %>
<% else %>
  <% conflicting_dates = [] %>
<% end %>
<h2 id="month">
    <%= link_to "<", { date: @date.prev_month, bookable: @booking.bookable_type, (@booking.bookable_type.downcase + "_id").to_sym => @booking.bookable_id, start_date: @proposed.start_date, end_date: @proposed.end_date } %>
    <%= @date.strftime("%B %Y") %>
    <%= link_to ">", { date: @date.next_month, bookable: @booking.bookable_type, (@booking.bookable_type.downcase + "_id").to_sym => @booking.bookable_id, start_date: @proposed.start_date, end_date: @proposed.end_date} %>
</h2>
<table id="booking-calendar">
	<%= render 'days' %>
	<% array_of_weeks.map do |week| %>
		<tr>
			<% week.map do |date| %>
				<%= content_tag :td, class: day_classes(date, @date, booked_dates, proposed_dates, proposed_dates[0], conflicting_dates) do %>
					<%= date.day %>
					<br>
					<% if date.month == @date.month %>
					  <% if conflicting_dates.include?(date) %>
					    <p>Conflict</p>
					    <%= booked_dates.fetch(date) %>
						<% elsif booked_dates.member?(date) %>
							<p>Booked</p>
							<%= booked_dates.fetch(date) %> <!--fetches the identity of the user that booked the equipment on that date.-->				
						<% elsif proposed_dates.include?(date) %>
								<% if session[:check] %>
									<span>Revised</span>
								<% else %>
								  <span>Current</span> 
								<% end %>
								<p>Trial Date</p>
						<% end %>
					<% end %>
				<% end %>
			<% end %>
		</tr>
	<% end %>
</table>
<div id="edit-booking" class="container" >
	<% if session[:check] == nil || !conflicting_dates.empty? %>
		<div id="conflict">
			<% if !conflicting_dates.empty? %>			
				<h3  class="center-message">There is a conflict. The following dates are not available:</h3>
				<% conflicting_dates.each do |date| %>
					<p class="center-message"><%= date %></p>
				<% end %>
			<% end %>
		</div>
		<%= form_for :booking, url: edit_user_booking_path, method: :get do |f| %>
			<div class="row">
				<%= f.date_field :start_date, class: "check-date-field col-xs-4 col-xs-offset-4" %>
			</div>
			<div class="row">
				<%= f.date_field :end_date, class: "check-date-field col-xs-4 col-xs-offset-4" %>
			</div>
			<div class="row">
				<%= f.submit "Check Dates", class: "submit-button btn btn-primary btn-lg col-xs-4 col-xs-offset-4" %>
			</div>
		<% end %>
	<% elsif session[:check] && conflicting_dates.empty? %>
		<h3 class="center-message">Your revised trial dates are fine and are shown in green above.</h3>
		<h3 class="center-message">Click the "Change Dates" button below or use the back button on your browser to edit.</h3>
		<div class="row">
			<%= link_to "Change Dates", update_user_booking_path(booking: { start_date: @proposed.start_date, end_date: @proposed.end_date}, id: @booking.id), method: :patch, class: "submit-button btn btn-primary btn-lg col-xs-4 col-xs-offset-4" %>
		</div>
	<% end %>
</div>



 


